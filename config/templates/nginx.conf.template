# Pidanos Nginx Configuration Template
# ====================================
# This template is used when Pidanos is deployed behind Nginx

upstream pidanos_web {
    server 127.0.0.1:{{ web_port }} fail_timeout=0;
}

upstream pidanos_api {
    server 127.0.0.1:{{ api_port }} fail_timeout=0;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name {{ server_name }};
    
    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
    }
    
    # Redirect all other requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ server_name }};
    
    # SSL Configuration
    ssl_certificate {{ ssl_cert_path }};
    ssl_certificate_key {{ ssl_key_path }};
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # SSL optimizations
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate {{ ssl_cert_path }};
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:; media-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'self';" always;
    
    # Logging
    access_log /var/log/nginx/pidanos_access.log;
    error_log /var/log/nginx/pidanos_error.log;
    
    # Root directory for static files
    root {{ web_root }}/static;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;
    
    # API endpoint
    location /api {
        proxy_pass http://pidanos_api;
        proxy_http_version 1.1;
        
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Disable buffering for SSE
        proxy_buffering off;
        proxy_cache off;
        
        # CORS headers (if needed)
        {% if cors_enabled %}
        add_header Access-Control-Allow-Origin "{{ cors_origin }}" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        if ($request_method = OPTIONS) {
            return 204;
        }
        {% endif %}
    }
    
    # Static files
    location /static {
        alias {{ web_root }}/static;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
    
    # Media files
    location /media {
        alias {{ web_root }}/media;
        expires 7d;
        add_header Cache-Control "public";
    }
    
    # Web interface
    location / {
        try_files $uri @pidanos_web;
    }
    
    location @pidanos_web {
        proxy_pass http://pidanos_web;
        proxy_http_version 1.1;
        
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Security headers for proxied requests
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }
    
    # Block page for DNS blocking
    location /blocked {
        root {{ web_root }}/templates;
        try_files /blocked.html =404;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
    
    # Monitoring endpoints (restrict access)
    location /metrics {
        {% if metrics_enabled %}
        allow 127.0.0.1;
        allow {{ admin_network }};
        deny all;
        
        proxy_pass http://127.0.0.1:{{ metrics_port }};
        {% else %}
        return 404;
        {% endif %}
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
    }
    
    # Deny access to backup files
    location ~ ~$ {
        deny all;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root {{ web_root }}/templates;
    }
    
    location = /50x.html {
        root {{ web_root }}/templates;
    }
}

# DNS-over-HTTPS endpoint (if enabled)
{% if doh_enabled %}
server {
    listen {{ doh_port }} ssl http2;
    listen [::]:{{ doh_port }} ssl http2;
    server_name {{ server_name }};
    
    ssl_certificate {{ ssl_cert_path }};
    ssl_certificate_key {{ ssl_key_path }};
    
    # Same SSL configuration as main server
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    
    location /dns-query {
        proxy_pass http://127.0.0.1:{{ doh_backend_port }};
        proxy_http_version 1.1;
        
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Required headers for DoH
        proxy_set_header Content-Type "application/dns-message";
        add_header Content-Type "application/dns-message" always;
        
        # Disable caching
        proxy_cache off;
        proxy_buffering off;
    }
}
{% endif %}